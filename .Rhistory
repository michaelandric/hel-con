apply(dat_matA, 2, mean)
apply(dat_matA, 2, median)
shapiro.test(c(dat_matA))
shapiro.test(c(dat_matA))
shapiro.test(c(dat_matA))
hist(c(dat_matA))
mean(c(dat_matA))
sd(c(dat_matA))
setwd('~/Documents/workspace/hel/group_similarity/')
library(dplyr)
library(ggplot2)
td = .05
within1 <- read.table(paste('within_session1_dens_',td,'_nmi.txt', sep=''))$V1
within2 <- read.table(paste('within_session2_dens_',td,'_nmi.txt', sep=''))$V1
between <- read.table(paste('between_dens_',td,'_nmi.txt', sep=''))$V1
repnames <- c(rep("sess_1", length(within1)), rep("sess_2", length(within2)), rep("between", length(between)))
nm_df <- tbl_df(data.frame(c(within1, within2, between), repnames))
names(nm_df) <- c('NMI', 'Group')
print(qplot(NMI, data = nm_df, geom="density", fill=Group, alpha=I(.66), xlim=c(0,1), main=paste("Density ",td*100,"%", sep=""), xlab="Normalized Mutual Information") + theme(panel.background = element_rect(fill="white")) + theme_bw())
setwd('~/Documents/workspace/hel/group_similarity/')
library(dplyr)
library(ggplot2)
pdf('plotting_similarity_nmi.pdf')
for (td in seq(.05, .2, .05))
{
within1 <- read.table(paste('within_session1_dens_',td,'_nmi.txt', sep=''))$V1
within2 <- read.table(paste('within_session2_dens_',td,'_nmi.txt', sep=''))$V1
between <- read.table(paste('between_dens_',td,'_nmi.txt', sep=''))$V1
repnames <- c(rep("sess_1", length(within1)), rep("sess_2", length(within2)), rep("between", length(between)))
nm_df <- tbl_df(data.frame(c(within1, within2, between), repnames))
names(nm_df) <- c('NMI', 'Group')
print(qplot(NMI, data = nm_df, geom="density", fill=Group, alpha=I(.66), xlim=c(0,1), main=paste("Density ",td*100,"%", sep=""), xlab="Normalized Mutual Information") + theme(panel.background = element_rect(fill="white")) + theme_bw())
}
dev.off()
matrix(rnorm(12), ncol=4)
apply(matrix(rnorm(12), ncol=4), 2, median)
apply(matrix(rnorm(12), ncol=4), 1, median)
cbind(c(seq3), apply(matrix(rnorm(12), ncol=4), 1, median))
cbind(c(seq(3), apply(matrix(rnorm(12), ncol=4), 1, median))
)
rbind(c(seq(3), apply(matrix(rnorm(12), ncol=4), 1, median))
)
seq(3)
apply(matrix(rnorm(12), ncol=4), 1, median)
rbind(seq(3), apply(matrix(rnorm(12), ncol=4), 1, median))
cbind(seq(3), apply(matrix(rnorm(12), ncol=4), 1, median))
seq(12)
seq(0, (12-1))
seq(0, 12-1)
2566 - 730
2566 - 730 - 150
2566 - 730 - 150 - 66
2566 - 730 - 150 - 66 - 1200
setwd('~/Documents/workspace/hel/group_modularity/')
source('~/Documents/workspace/hel-con/plotting_max_q_bar_graphs_mediansofmax.R', echo=TRUE)
medians_mat
aa
getwd()
setwd('~/Documents/workspace/hel/group_rnd_modularity/')
library(dplyr)
subjects <- c()
s_nums = seq(1, 19)[seq(1,19) != 9]
for (s in s_nums)
{
subjects <- c(subjects, paste('hel', s, sep=''))
}
subjects
conditions <- seq(2)
condition_names = c("A", "B")
thresholds <- c(10, 5)  #These are densities. % of complete graph
thresholds <- c(10, 5)  #These are densities. % of complete graph
dat5 <- read.table('max_q_values_density0.05_array.txt')
dat10 <- read.table('max_q_values_density0.1_array.txt')
dat <- rbind(stack(dat20), stack(dat15), stack(dat10), stack(dat5))$values
setwd('~/Documents/workspace/hel/group_modularity/')
dat5 <- read.table('max_q_values_density0.05_array.txt')
dat10 <- read.table('max_q_values_density0.1_array.txt')
dat <- rbind(stack(dat20), stack(dat15), stack(dat10), stack(dat5))$values
setwd('~/Documents/workspace/hel/group_rnd_modularity/')
rnd_dat5 <- read.table('rnd_max_q_values_density0.05_array.txt')
rnd_dat10 <- read.table('rnd_max_q_values_density0.1_array.txt')
dat5
rnd_dat5
colMeans(dat5)
colMeans(rnd_dat5)
shapiro.test(rnorm(100))
shapiro.test(rnorm(100))
shapiro.test(rnorm(100))
shapiro.test(rchisq(100,3))
shapiro.test(rchisq(100,3))
shapiro.test(rnd_dat5$V1)
shapiro.test(rnd_dat5$V1)
shapiro.test(rnd_dat5$V2)
shapiro.test(dat5$V2)
shapiro.test(dat5$V1)
hist(dat5$V1)
hist(dat5$V2)
hist(rnd_dat5$V2)
hist(rnd_dat5$V1)
shapiro.test(rnd_dat5$V1)
shapiro.test(rnd_dat5$V2)
hist(rnd_dat5$V1, breaks=c(100))
hist(rnd_dat5$V1, breaks=c(25))
wilcox.test(dat5$V1, rnd_dat5$V1)
wilcox.test(dat5$V1, rnd_dat5$V1, paired=T)
wilcox.test(dat5$V2, rnd_dat5$V2, paired=T)
wilcox.test(rnd_dat5$V1, dat5$V1, paired=T)
wilcox.test(rnd_dat5$V1, dat5$V1)
wilcox.test(rnd_dat5$V1, rnd_dat5$V2)
wilcox.test(dat5$V2, rnd_dat5$V2)
wilcox.test(dat5$V1, rnd_dat5$V1)
wilcox.test(dat10$V1, rnd_dat10$V1)
wilcox.test(dat10$V1, rnd_dat10$V1, paired=T)
wilcox.test(dat10$V2, rnd_dat10$V2, paired=T)
apply(rnd_dat5, 2, median)
apply(dat5, 2, median)
apply(dat10, 2, median)
apply(rnd_dat10, 2, median)
wilcox.test(dat10$V2, rnd_dat10$V2, paired=T)
wilcox.test(dat10$V1, rnd_dat10$V1, paired=T)
wilcox.test(dat5$V2, rnd_dat5$V2, paired=T)
wilcox.test(dat5$V1, rnd_dat5$V1, paired=T)
apply(dat5, 2, median)
apply(rnd_dat5, 2, median)
rnd_dat5
apply(rnd_dat5, 2, sd)
apply(dat5, 2, sd)
wilcox.test(dat5$V1, rnd_dat5$V1, paired=T)
?wilcox.test
wilcox.test(dat5$V1, rnd_dat5$V1, paired=T, exact=F)
wilcox.test(dat5$V1, rnd_dat5$V1, paired=T, exact=F)
q()
library(dplyr)
setwd('~/Documents/workspace/hel/group_global_connectivity/')
conditions <- c('!st View', '2nd View')
nn <- read.csv('avg_corrZ_sess2vals_Clust_mask.cluster_info.csv')
clusters <- unique(nn$cluster)
clusters
conditions <- c('1st View', '2nd View')
cl = 1
tmp <- filter(nn, cluster==cl)
tmp
dim(tmp)
tmp_means <- tapply(tmp$val, tmp$condition, mean)
tmp_means
subset(tmp_means, condition==1)
subset(tmp_means, tmp_means$condition==1)
subset(tmp_means, which(condition==1))
subset(tmp_means, which(condition=1))
subset(tmp_means, condition=1)
subset(tmp_means, tmp_means$conditio==1)
?subset
subset(tmp_means, condition==1)
subset(tmp_means, condition=1)
tmp_means
tmp
subset(tmp, condition==1)
subset(tmp, condition==1)$val
mean(subset(tmp, condition==1)$val)
length(subset(tmp, condition==1)$val)
length(subset(tmp, condition==2)$val)
mean(subset(tmp, condition==2)$val)
tmp_means
for (cl in clusters)
{
tmp <- filter(nn, cluster==cl)
tmp_means <- tapply(tmp$val, tmp$condition, mean)
# tmp_means <- tmp_means[c(1, 2, 4, 3)]
error_vec <- c()
for (i in seq(length(conditions)))
{
er <- sd(filter(tmp, condition==i)$val - tapply(tmp$val, tmp$subject, mean) / sqrt(19))
error_vec <- c(error_vec, er)
}
# error_vec <- error_vec[c(1, 2, 4, 3)]
ylim <- c(0, 1.21 * max(tmp_means + error_vec))
# ab = barplot(tmp_means, beside = TRUE, ylim = ylim, ylab = "Avg. Global Connectivity")
ab = barplot(tmp_means, beside = TRUE, ylim = ylim)
segments(x0 = ab, x1 = ab, y0 = tmp_means, y1 = tmp_means + error_vec)
segments(x0 = ab - .2, x1 = ab + .2, y0 = tmp_means + error_vec, y1 = tmp_means + error_vec)
title(paste("Cluster",cl))
}
barplot(tmp_means, beside=TRUE)
cl
clusters
for (cl in clusters)
{
tmp <- filter(nn, cluster==cl)
tmp_means <- tapply(tmp$val, tmp$condition, mean)
# tmp_means <- tmp_means[c(1, 2, 4, 3)]
error_vec <- c()
for (i in seq(length(conditions)))
{
er <- sd(filter(tmp, condition==i)$val - tapply(tmp$val, tmp$subject, mean) / sqrt(19))
error_vec <- c(error_vec, er)
}
# error_vec <- error_vec[c(1, 2, 4, 3)]
# ylim <- c(0, 1.21 * max(tmp_means + error_vec))
# ab = barplot(tmp_means, beside = TRUE, ylim = ylim, ylab = "Avg. Global Connectivity")
ab = barplot(tmp_means, beside = TRUE, ylim = ylim)
segments(x0 = ab, x1 = ab, y0 = tmp_means, y1 = tmp_means + error_vec)
segments(x0 = ab - .2, x1 = ab + .2, y0 = tmp_means + error_vec, y1 = tmp_means + error_vec)
title(paste("Cluster",cl))
}
for (cl in clusters)
{
tmp <- filter(nn, cluster==cl)
tmp_means <- tapply(tmp$val, tmp$condition, mean)
# tmp_means <- tmp_means[c(1, 2, 4, 3)]
error_vec <- c()
for (i in seq(length(conditions)))
{
er <- sd(filter(tmp, condition==i)$val - tapply(tmp$val, tmp$subject, mean) / sqrt(19))
error_vec <- c(error_vec, er)
}
# error_vec <- error_vec[c(1, 2, 4, 3)]
# ylim <- c(0, 1.21 * max(tmp_means + error_vec))
ylim <- c(0, max(tmp_means + error_vec)
# ab = barplot(tmp_means, beside = TRUE, ylim = ylim, ylab = "Avg. Global Connectivity")
ab = barplot(tmp_means, beside = TRUE, ylim = ylim)
segments(x0 = ab, x1 = ab, y0 = tmp_means, y1 = tmp_means + error_vec)
segments(x0 = ab - .2, x1 = ab + .2, y0 = tmp_means + error_vec, y1 = tmp_means + error_vec)
title(paste("Cluster",cl))
}
for (cl in clusters)
{
tmp <- filter(nn, cluster==cl)
tmp_means <- tapply(tmp$val, tmp$condition, mean)
# tmp_means <- tmp_means[c(1, 2, 4, 3)]
error_vec <- c()
for (i in seq(length(conditions)))
{
er <- sd(filter(tmp, condition==i)$val - tapply(tmp$val, tmp$subject, mean) / sqrt(19))
error_vec <- c(error_vec, er)
}
# error_vec <- error_vec[c(1, 2, 4, 3)]
# ylim <- c(0, 1.21 * max(tmp_means + error_vec))
ylim <- c(0, max(tmp_means + error_vec))
# ab = barplot(tmp_means, beside = TRUE, ylim = ylim, ylab = "Avg. Global Connectivity")
ab = barplot(tmp_means, beside = TRUE, ylim = ylim)
segments(x0 = ab, x1 = ab, y0 = tmp_means, y1 = tmp_means + error_vec)
segments(x0 = ab - .2, x1 = ab + .2, y0 = tmp_means + error_vec, y1 = tmp_means + error_vec)
title(paste("Cluster",cl))
}
tmp_means
error_vec
nn
summary(nn)
unique(subject)
unique(nn$subject)
length(unique(nn$subject))
for (cl in clusters)
{
tmp <- filter(nn, cluster==cl)
tmp_means <- tapply(tmp$val, tmp$condition, mean)
# tmp_means <- tmp_means[c(1, 2, 4, 3)]
error_vec <- c()
for (i in seq(length(conditions)))
{
er <- sd(filter(tmp, condition==i)$val - tapply(tmp$val, tmp$subject, mean) / sqrt(n_subj))
error_vec <- c(error_vec, er)
}
# error_vec <- error_vec[c(1, 2, 4, 3)]
# ylim <- c(0, 1.21 * max(tmp_means + error_vec))
ylim <- c(0, max(tmp_means + error_vec))
# ab = barplot(tmp_means, beside = TRUE, ylim = ylim, ylab = "Avg. Global Connectivity")
ab = barplot(tmp_means, beside = TRUE, ylim = ylim)
segments(x0 = ab, x1 = ab, y0 = tmp_means, y1 = tmp_means + error_vec)
segments(x0 = ab - .2, x1 = ab + .2, y0 = tmp_means + error_vec, y1 = tmp_means + error_vec)
title(paste("Cluster",cl))
}
n_subj <- length(unique(nn$subject))
for (cl in clusters)
{
tmp <- filter(nn, cluster==cl)
tmp_means <- tapply(tmp$val, tmp$condition, mean)
# tmp_means <- tmp_means[c(1, 2, 4, 3)]
error_vec <- c()
for (i in seq(length(conditions)))
{
er <- sd(filter(tmp, condition==i)$val - tapply(tmp$val, tmp$subject, mean) / sqrt(n_subj))
error_vec <- c(error_vec, er)
}
# error_vec <- error_vec[c(1, 2, 4, 3)]
# ylim <- c(0, 1.21 * max(tmp_means + error_vec))
ylim <- c(0, max(tmp_means + error_vec))
# ab = barplot(tmp_means, beside = TRUE, ylim = ylim, ylab = "Avg. Global Connectivity")
ab = barplot(tmp_means, beside = TRUE, ylim = ylim)
segments(x0 = ab, x1 = ab, y0 = tmp_means, y1 = tmp_means + error_vec)
segments(x0 = ab - .2, x1 = ab + .2, y0 = tmp_means + error_vec, y1 = tmp_means + error_vec)
title(paste("Cluster",cl))
}
er
tmp <- filter(nn, cluster==cl)
tmp_means <- tapply(tmp$val, tmp$condition, mean)
error_vec <- c()
i = 1
sd(filter(tmp, condition==i)$val - tapply(tmp$val, tmp$subject, mean) / sqrt(n_subj))
tmp
i
filter(tmp, condition==i)
filter(tmp, condition==i)$val
tapply(tmp$val, tmp$subject, mean)
tmp$val
tmp
tapply(tmp$val, tmp$subject, mean)
length(tapply(tmp$val, tmp$subject, mean))
tmp
nn
dim(nn)
36*3
rep(seq(3))
rep(seq(3), 10)
length(rep(seq(3), 10))
length(rep(rep(seq(3), 10), 2))
rep(rep(seq(3), 10), 2)
length(rep(seq(3), 2))
length(rep(seq(3), 2))
length(rep(seq(2), 3))
rep(seq(2), 3)
rep(rep(seq(2), 3), 10)
length(rep(rep(seq(2), 3), 10))
length(rep(rep(seq(2), 3), 9))
length(rep(rep(seq(3), 2), 9))
length(rep(rep(seq(3), 2), 8))
rep(rep(seq(3), 2), 8)
rep(rep(seq(3), 2), 8)
rep(rep(seq(2), each=2), 8)
rep(rep(seq(2), each=3), 8)
subjects <- c()
s_nums = seq(1, 19)[seq(1,19) != 9]
for (s in s_nums)
{
subjects <- c(subjects, paste('hel', s, sep=''))
}
subjects
rep(rep(seq(3), 2), 8)
rep(rep(seq(2), each=3), 8)
rep(subjects, each=10)
rep(subjects, each=10)[51]
rep(subjects, each=6)[51]
rep(subjects, each=6)[
]
rep(subjects, each=6)
rep(rep(seq(3), 2), 8)
rep(rep(seq(2), each=3), 8)
nn <- read.csv('avg_corrZ_sess2vals_Clust_mask.cluster_info.csv')
clusters <- unique(nn$cluster)
n_subj <- length(unique(nn$subject))
tmp <- filter(nn, cluster==cl)
tmp_means <- tapply(tmp$val, tmp$condition, mean)
error_vec <- c()
i
sd(filter(tmp, condition==i)$val - tapply(tmp$val, tmp$subject, mean) / sqrt(n_subj))
for (cl in clusters)
{
tmp <- filter(nn, cluster==cl)
tmp_means <- tapply(tmp$val, tmp$condition, mean)
# tmp_means <- tmp_means[c(1, 2, 4, 3)]
error_vec <- c()
for (i in seq(length(conditions)))
{
er <- sd(filter(tmp, condition==i)$val - tapply(tmp$val, tmp$subject, mean) / sqrt(n_subj))
error_vec <- c(error_vec, er)
}
# error_vec <- error_vec[c(1, 2, 4, 3)]
# ylim <- c(0, 1.21 * max(tmp_means + error_vec))
ylim <- c(0, max(tmp_means + error_vec))
# ab = barplot(tmp_means, beside = TRUE, ylim = ylim, ylab = "Avg. Global Connectivity")
ab = barplot(tmp_means, beside = TRUE, ylim = ylim)
segments(x0 = ab, x1 = ab, y0 = tmp_means, y1 = tmp_means + error_vec)
segments(x0 = ab - .2, x1 = ab + .2, y0 = tmp_means + error_vec, y1 = tmp_means + error_vec)
title(paste("Cluster",cl))
}
for (cl in clusters)
{
tmp <- filter(nn, cluster==cl)
tmp_means <- tapply(tmp$val, tmp$condition, mean)
# tmp_means <- tmp_means[c(1, 2, 4, 3)]
error_vec <- c()
for (i in seq(length(conditions)))
{
er <- sd(filter(tmp, condition==i)$val - tapply(tmp$val, tmp$subject, mean) / sqrt(n_subj))
error_vec <- c(error_vec, er)
}
# error_vec <- error_vec[c(1, 2, 4, 3)]
ylim <- c(0, 1.21 * max(tmp_means + error_vec))
# ab = barplot(tmp_means, beside = TRUE, ylim = ylim, ylab = "Avg. Global Connectivity")
ab = barplot(tmp_means, beside = TRUE, ylim = ylim)
segments(x0 = ab, x1 = ab, y0 = tmp_means, y1 = tmp_means + error_vec)
segments(x0 = ab - .2, x1 = ab + .2, y0 = tmp_means + error_vec, y1 = tmp_means + error_vec)
title(paste("Cluster",cl))
}
source('~/Documents/workspace/hel-con/clusters_barplots.R', echo=TRUE)
tmp_means
q()
getwd()
setwd('/Users/andric/Documents/workspace/hel/group_global_connectivity/')
library(clue)
ls()
8803089 / 2967
?cl_ensemble
ag <- read.table('group_Clust_msk_glob_conn_knnward_clst1')
summary(ag)
dim(rowSums(ag))
length(rowSums(ag))
rm(list=ls())
setwd('/Users/andric/Documents/workspace/hel/group_global_connectivity/')
library(clue)
clst_prts <- read.table('group_Clust_msk_glob_conn_knnward_clst1')
clst_rows <- rowSums(clst_prts)
length(which(clst_rows > 0))
dim(clst_prts[which(clst_rows > 0), ])
clst_prts <- clst_prts[which(clst_rows > 0), ]
dim(clst_prts)
cl_en <- cl_ensemble(clst_prts)
hclust(clst_prts)
length(which(clst_prts == 0))
?as.dist
?hclust
?el_ensemble
dist(clst_prts)
hclust(as.dist(clst_prts))
hclust(dist(clst_prts))
hclust(dist(clst_prts, method = 'ward.D'))
hclust(dist(clst_prts, method = 'ward.D2'))
hclust(dist(clst_prts, method = 'single'))
hclust(dist(clst_prts), method = 'ward.D')
?dist
hclust(dist(clst_prts), method = 'ward.D2')
summary(hclust(dist(clst_prts), method = 'ward.D2'))
cl_ensemble(hclust(dist(clst_prts), method = 'ward.D2'))
summary(cl_ensemble(hclust(dist(clst_prts), method = 'ward.D2')))
?cl_agreement
cl_agreement(clst_prts)
as.cl_ensemble(clst_prts)
summary(clst_prts)
hclust(dist(clst_prts), method = 'ward.D2')
summary(hclust(dist(clst_prts), method = 'ward.D2'))
hclust(dist(clst_prts), method = 'ward.D2')
hclust(dist(clst_prts), method = 'ward.D2')$labels
length(hclust(dist(clst_prts), method = 'ward.D2')$labels)
summary(hclust(dist(clst_prts), method = 'ward.D2'))
hclust(dist(clst_prts), method = 'ward.D2')$order
summary(hclust(dist(clst_prts), method = 'ward.D2'))
str(hclust(dist(clst_prts), method = 'ward.D2'))
cl_ensemble(hclust(dist(clst_prts), method = 'ward.D2'))
str(cl_ensemble(hclust(dist(clst_prts), method = 'ward.D2')))
summary(cl_ensemble(hclust(dist(clst_prts), method = 'ward.D2')))
cl_consensus(hclust(dist(clst_prts), method = 'ward.D2'))
clcon <- cl_consensus(hclust(dist(clst_prts), method = 'ward.D2'))
summary(clcon)
str(clcon)
4720410/262245
summary(cl_agreement(clst_prts))
clcon[1]
summary(as.numeric(clcon[1]))
summary(clcon[1])
length(clcon)
length(clcon[1])
?dist
length(clcon[1])
length(clcon[2])
str(clcon[2])
str(clcon[1])
summary(clcon[1])
?cl_consensus
length(as.numeric(clcon[1]))
cl_ensem <- cl_ensemble(hclust(dist(clst_prts), method = 'ward.D2'))
summary(cl_ensem)
str(cl_ensem)
cl_ensem$labels
cl_ensem
cons_ensem <- cl_consensu(cl_ensem)
cons_ensem <- cl_consensus(cl_ensem)
summmary(cons_ensem)
summary(cons_ensem)
length(as.numeric((cons_ensem)[1]))
min(as.numeric((cons_ensem)[1]))
cons_ensem
cons_ensem[1]
length(cons_ensem[1])
summary(cons_ensem[1])
cl_ensem <- cl_ensemble(hclust(as.dist(clst_prts), method = 'ward.D2'))
8803089 / 2967
summary(ag)
ag <- read.table('agreement_group_Clust_msk_glob_conn_knnward_clst1')
cl_agensem <- cl_ensemble(hclust(as.dist(ag), method = 'ward.D2'))
ag_cons <- cl_consensus(cl_agensem)
summary(ag_cons)
summary(ag_cons[1])
summary(as.numeric(ag_cons[1]))
str(as.numeric(ag_cons[1]))
str(ag_cons[1])
length(ag_cons[1])
length(ag_cons[1][1])
length(ag_cons$.Data)
length(ag_cons$.Data[1])
length(ag_cons$.Data[1][1])
summary(ag_cons$.Data[1])
summary(ag_cons$.Data[1]$V2967)
summary(ag_cons$.Data[1][2967])
length(ag_cons$.Data[1][2967])
ag_cons$.Data[1][2967]
ag_cons$.Data[1][2966]
length(unique(ag_cons$.Data[1]))
unique(ag_cons$.Data[1])
?cl_ensemble
?hclust
?as.dist
?hclust
?cl_ensemble
